{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\agida\\\\react-webshop\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { fetchCollectionsStart } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nconst ShopPage = ({\n  fetchCollectionsStart\n}) => {\n  useEffect(() => {\n    fetchCollectionsStart();\n  });\n  const {\n    match,\n    selectIsCollectionsLoaded\n  } = this.props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shop-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n      isLoading: !selectIsCollectionsLoaded\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 6\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n      isLoading: !selectIsCollectionsLoaded\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 6\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }\n  }));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  selectIsCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/agida/react-webshop/src/pages/shop/shop.component.jsx"],"names":["React","useEffect","Route","connect","createStructuredSelector","CollectionsOverview","CollectionPage","fetchCollectionsStart","selectIsCollectionsLoaded","WithSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","match","props","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SAASC,qBAAT,QAAsC,+BAAtC;AACA,SAASC,yBAAT,QAA0C,iCAA1C;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACJ,mBAAD,CAAlD;AACA,MAAMM,yBAAyB,GAAGF,WAAW,CAACH,cAAD,CAA7C;;AAEA,MAAMM,QAAQ,GAAG,CAAC;AAAEL,EAAAA;AAAF,CAAD,KAA+B;AAC/CN,EAAAA,SAAS,CAAC,MAAM;AACfM,IAAAA,qBAAqB;AACrB,GAFQ,CAAT;AAIA,QAAM;AAAEM,IAAAA,KAAF;AAASL,IAAAA;AAAT,MAAuC,KAAKM,KAAlD;AAEA,sBACC;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,KAAD;AACC,IAAA,KAAK,MADN;AAEC,IAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,EAFrB;AAGC,IAAA,MAAM,EAAGD,KAAD,iBACP,oBAAC,8BAAD;AACC,MAAA,SAAS,EAAE,CAACN;AADb,OAEKM,KAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAWC,oBAAC,KAAD;AACC,IAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,gBADrB;AAEC,IAAA,MAAM,EAAGD,KAAD,iBACP,oBAAC,yBAAD;AACC,MAAA,SAAS,EAAE,CAACN;AADb,OAEKM,KAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXD,CADD;AAuBA,CA9BD;;AAgCA,MAAME,eAAe,GAAGZ,wBAAwB,CAAC;AAChDI,EAAAA,yBAAyB,EAAEA;AADqB,CAAD,CAAhD;;AAIA,MAAMS,kBAAkB,GAAIC,QAAD,KAAe;AACzCX,EAAAA,qBAAqB,EAAE,MAAMW,QAAQ,CAACX,qBAAqB,EAAtB;AADI,CAAf,CAA3B;;AAIA,eAAeJ,OAAO,CAACa,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CL,QAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\r\nimport CollectionPage from '../collection/collection.component';\r\n\r\nimport { fetchCollectionsStart } from '../../redux/shop/shop.actions';\r\nimport { selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\r\n\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\n\r\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nconst ShopPage = ({ fetchCollectionsStart }) => {\r\n\tuseEffect(() => {\r\n\t\tfetchCollectionsStart();\r\n\t});\r\n\r\n\tconst { match, selectIsCollectionsLoaded } = this.props;\r\n\r\n\treturn (\r\n\t\t<div className='shop-page'>\r\n\t\t\t<Route\r\n\t\t\t\texact\r\n\t\t\t\tpath={`${match.path}`}\r\n\t\t\t\trender={(props) => (\r\n\t\t\t\t\t<CollectionsOverviewWithSpinner\r\n\t\t\t\t\t\tisLoading={!selectIsCollectionsLoaded}\r\n\t\t\t\t\t\t{...props}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t\t<Route\r\n\t\t\t\tpath={`${match.path}/:collectionId`}\r\n\t\t\t\trender={(props) => (\r\n\t\t\t\t\t<CollectionPageWithSpinner\r\n\t\t\t\t\t\tisLoading={!selectIsCollectionsLoaded}\r\n\t\t\t\t\t\t{...props}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n\tselectIsCollectionsLoaded: selectIsCollectionsLoaded,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\tfetchCollectionsStart: () => dispatch(fetchCollectionsStart()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}