{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.fetchCollectionsFailure,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.errorMessage)));\n  };\n};","map":{"version":3,"sources":["C:/Users/agida/react-webshop/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","collectionsMap","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,SACCC,SADD,EAECC,+BAFD,QAGO,+BAHP;AAKA,OAAO,MAAMC,qBAAqB,GAAIC,cAAD,KAAqB;AACzDC,EAAAA,IAAI,EAAEL,eAAe,CAACM;AADmC,CAArB,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAIH,cAAD,KAAqB;AAC3DC,EAAAA,IAAI,EAAEL,eAAe,CAACQ,yBADqC;AAE3DC,EAAAA,OAAO,EAAEL;AAFkD,CAArB,CAAhC;AAKP,OAAO,MAAMM,uBAAuB,GAAIC,YAAD,KAAmB;AACzDN,EAAAA,IAAI,EAAEL,eAAe,CAACU,uBADmC;AAEzDD,EAAAA,OAAO,EAAEE;AAFgD,CAAnB,CAAhC;AAKP,OAAO,MAAMC,0BAA0B,GAAG,MAAM;AAC/C,SAAQC,QAAD,IAAc;AACpB,UAAMC,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACV,qBAAqB,EAAtB,CAAR;AAEAW,IAAAA,aAAa,CACXE,GADF,GAEEC,IAFF,CAEQC,QAAD,IAAc;AACnB,YAAMd,cAAc,GAAGF,+BAA+B,CAACgB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACN,uBAAuB,CAACH,cAAD,CAAxB,CAAR;AACA,KALF,EAMEe,KANF,CAMSC,KAAD,IAAWP,QAAQ,CAACH,uBAAuB,CAACU,KAAK,CAACT,YAAP,CAAxB,CAN3B;AAOA,GAXD;AAYA,CAbM","sourcesContent":["import ShopActionTypes from './shop.types';\r\n\r\nimport {\r\n\tfirestore,\r\n\tconvertCollectionsSnapshotToMap,\r\n} from '../../firebase/firebase.utils';\r\n\r\nexport const fetchCollectionsStart = (collectionsMap) => ({\r\n\ttype: ShopActionTypes.FETCH_COLLECTIONS_START,\r\n});\r\n\r\nexport const fetchCollectionsSuccess = (collectionsMap) => ({\r\n\ttype: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n\tpayload: collectionsMap,\r\n});\r\n\r\nexport const fetchCollectionsFailure = (errorMessage) => ({\r\n\ttype: ShopActionTypes.fetchCollectionsFailure,\r\n\tpayload: errorMessage,\r\n});\r\n\r\nexport const fetchCollectionsStartAsync = () => {\r\n\treturn (dispatch) => {\r\n\t\tconst collectionRef = firestore.collection('collections');\r\n\t\tdispatch(fetchCollectionsStart());\r\n\r\n\t\tcollectionRef\r\n\t\t\t.get()\r\n\t\t\t.then((snapshot) => {\r\n\t\t\t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n\t\t\t\tdispatch(fetchCollectionsSuccess(collectionsMap));\r\n\t\t\t})\r\n\t\t\t.catch((error) => dispatch(fetchCollectionsFailure(error.errorMessage)));\r\n\t};\r\n};\r\n"]},"metadata":{},"sourceType":"module"}