{"ast":null,"code":"import ShopActionTypes from './shop.types';\nexport const fetchCollectionsStart = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.fetchCollectionsFailure,\n  payload: errorMessage\n}); // export const fetchCollectionsStartAsync = () => {\n// \treturn (dispatch) => {\n// \t\tconst collectionRef = firestore.collection('collections');\n// \t\tdispatch(fetchCollectionsStart());\n// \t\tcollectionRef\n// \t\t\t.get()\n// \t\t\t.then((snapshot) => {\n// \t\t\t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n// \t\t\t\tdispatch(fetchCollectionsSuccess(collectionsMap));\n// \t\t\t})\n// \t\t\t.catch((error) => dispatch(fetchCollectionsFailure(error.errorMessage)));\n// \t};\n// };","map":{"version":3,"sources":["C:/Users/agida/react-webshop/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","fetchCollectionsStart","collectionsMap","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,OAAO,MAAMC,qBAAqB,GAAIC,cAAD,KAAqB;AACzDC,EAAAA,IAAI,EAAEH,eAAe,CAACI;AADmC,CAArB,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAIH,cAAD,KAAqB;AAC3DC,EAAAA,IAAI,EAAEH,eAAe,CAACM,yBADqC;AAE3DC,EAAAA,OAAO,EAAEL;AAFkD,CAArB,CAAhC;AAKP,OAAO,MAAMM,uBAAuB,GAAIC,YAAD,KAAmB;AACzDN,EAAAA,IAAI,EAAEH,eAAe,CAACQ,uBADmC;AAEzDD,EAAAA,OAAO,EAAEE;AAFgD,CAAnB,CAAhC,C,CAKP;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import ShopActionTypes from './shop.types';\r\n\r\nexport const fetchCollectionsStart = (collectionsMap) => ({\r\n\ttype: ShopActionTypes.FETCH_COLLECTIONS_START,\r\n});\r\n\r\nexport const fetchCollectionsSuccess = (collectionsMap) => ({\r\n\ttype: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n\tpayload: collectionsMap,\r\n});\r\n\r\nexport const fetchCollectionsFailure = (errorMessage) => ({\r\n\ttype: ShopActionTypes.fetchCollectionsFailure,\r\n\tpayload: errorMessage,\r\n});\r\n\r\n// export const fetchCollectionsStartAsync = () => {\r\n// \treturn (dispatch) => {\r\n// \t\tconst collectionRef = firestore.collection('collections');\r\n// \t\tdispatch(fetchCollectionsStart());\r\n\r\n// \t\tcollectionRef\r\n// \t\t\t.get()\r\n// \t\t\t.then((snapshot) => {\r\n// \t\t\t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n// \t\t\t\tdispatch(fetchCollectionsSuccess(collectionsMap));\r\n// \t\t\t})\r\n// \t\t\t.catch((error) => dispatch(fetchCollectionsFailure(error.errorMessage)));\r\n// \t};\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}